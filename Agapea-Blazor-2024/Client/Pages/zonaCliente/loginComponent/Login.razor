@page "/Cliente/Login"
@using Agapea_Blazor_2024.Client.Models.Services.Interfaces
@inject IJSRuntime jsService
@inject IRestService restService
@inject NavigationManager navManager
@inject IStorageService storageService

<div class="container pt-5">
    <div class="row">
        <div class="col-7 pt-3">
            <h2>Registrate en <strong>agapea.com</strong></h2>
            <p>Regístrate en agapea.com y disfruta de todos sus beneficios y comodidades.</p>

            <div class="m-4">
                <a class="btn btn-primary btn-lg" asp-controller="Cliente" asp-action="Registro">Registrate</a>
            </div>

            <p class="mt-4"><b>Crea tus propias listas de libros</b> (<a href="">Consultar información</a>)</p>

            <div class="d-flex justify-content-center mt-5">
                <img src="~/images/imagen-login.png" />
            </div>
        </div>
        <div class="col-5 bg-light p-4 border">

            <div asp-validation-summary="All" class="text-danger"></div>

            <EditForm Model="CuentaLogin" OnValidSubmit="LoginCliente">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <h4>Identifícate con:</h4>
                <!-- --------- mensajes de error del servicio rest server ------------- -->
                @if (!string.IsNullOrEmpty(MensajeError))
                {
                    <div class="alert alert-danger" role="alert">
                        @MensajeError
                    </div>
                }
                <!-- ------------------------ -->
                <p>Usuario de <img src="~/images/agapea-logo.svg" alt="" width="123" height="60"></p>

                <div class="form-floating m-1">
                    <input type="email" class="form-control" id="Email" placeholder="Mi usuario" @bind-value="CuentaLogin.Email" />
                    <span class="text-danger" ></span>
                    <label for="floatingInput">Email</label>
                </div>

                <div class="form-floating m-1">
                    <input type="password" class="form-control" id="Contraseña" placeholder="Contraseña" @bind-value="CuentaLogin.Password" />
                    <span class="text-danger" ></span>
                    <label for="floatingPassword"><small>Contraseña</small></label>
                </div>


                <div class="mt-2 ml-1">
                    <a href=""><small class="text-mutted">¿Has olvidado tu contraseña?</small></a>
                </div>

                <button class="m-4 btn btn-lg btn-primary" type="submit">Identifícate</button>

                <div class="ml-1">
                    <p class="text-muted">Al identificarte, aceptas nuestras <a class="text-muted" href="">Condiciones de uso, y nuestras condiciones de cookies</a></p>
                </div>
            </EditForm>
        </div>
    </div>

</div>



@code {
    #region ... propiedades componente login
    public Cuenta CuentaLogin = new Cuenta();
    public String MensajeError { get; set; } = "";
    
    #endregion
    #region ... metodos componente login
    public async Task LoginCliente()
    {
        //Pasar por ajax datos de la cuenta al servicio RESTFUL montado en el servidor asp.net core
        await jsService.InvokeVoidAsync("console.log", CuentaLogin);
        RestMessage _resp = await restService.LoginCliente(CuentaLogin);
        await jsService.InvokeVoidAsync("console.log", _resp);
        if (_resp.Codigo == 0)
        {
            //Guardar en el localstorage el token de la cuenta
            //O en un servicio utilizando observables
            await this.storageService.AlmacenamientoJWTAsync(_resp.Tokensesion);
            await this.storageService.AlmacenamientoDatosClienteAsync(_resp.DatosCliente);
            navManager.NavigateTo("/");
        }
        else
        {
            //Mostrar mensaje en la vista del componente...
            this.MensajeError = _resp.Mensaje + "..." + _resp.Error;
        }
        
    }
    #endregion
}
