@page "/Tienda/FinalizarPedido"

@using Agapea_Blazor_2024.Client.Models.Services.Interfaces
@inject IRestService restSvc
@inject IStorageService storageSvc
@inject NavigationManager navigate


@*

    si en la url vienen dos parametros en la querystring con este formato ? idcliente=.... & idpedido=....
    es q vengo del pago por paypal, tengo q recuperar de nuevo del cliente con un nuevo token de acceso y meterlo en
    el servicio del storage
*@

<div class="container">
    <div class="row">
        <img src="/images/pedidoOK.jpg" style="width: 200px; height: 200px;" alt="..." />
    </div>

    <div class="row">
        <div class="col">
            <p><h5>Pago del pedido con id: @_pedidofinalizado.IdPedido realizado correctamente</h5></p>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <p>Has pagado @_pedidofinalizado.Total € en fecha: @_pedidofinalizado.FechaPedido en Agapea.com</p>
            <p>Se te ha mandado un email a: <span style="color:aqua">@this._datosCliente.Credenciales.Email</span> con la factura del mismo (consulta la bandeja de entrada de tu correo o el spam por si acaso.</p>
            <br />
            <p> Accede al panel de tu USUARIO para ver la lista de pedidos que has hecho en la tienda.</p>
        </div>
    </div>

    <div class="row d-flex justify-content-center">
        <button class="btn btn-success btn-lg" @onclick="@(()=>this.navigate.NavigateTo("/Cliente/Panel/InicioPanel"))">IR A MI PANEL</button>
    </div>

</div>

@code {
    public Pedido _pedidofinalizado { get; set; } = new Pedido();
    public Cliente _datosCliente { get; set; } = new Cliente();

    //---parametros opcionales en querystring: --------------
    [Parameter]
    [SupplyParameterFromQuery(Name = "idcliente")]
    public string IdCliente { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "idpedido")]
    public string IdPedido { get; set; }
    //------------------------------------------------------

    protected override async Task OnInitializedAsync()
    {
        //recupero datos del cliente again...
        RestMessage resp = await this.restSvc.LoginCliente(IdCliente);
        if (resp.Codigo == 0)
        {
            this._datosCliente = resp.DatosCliente;

            this._pedidofinalizado = this._datosCliente.PedidosCliente.Where((Pedido p) => p.IdPedido == IdPedido).Single<Pedido>();

            //recuperar datos del cliente con id: idcliente, recuperar datos del pedido recien finalizado ok con id: ippedido
            this.storageSvc.AlmacenamientoDatosCliente(_datosCliente);
            this.storageSvc.AlmacenamientoJWT(resp.Tokensesion);

        }
    }
}
